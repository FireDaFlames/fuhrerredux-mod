#####################
##SWITZERLAND IDEAS##
#####################

ideas = {
    country = {
		SWI_arms_industry = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_arms_industry"}
			picture = generic_production_bonus
			modifier = {
				industrial_capacity_factory = 0.05
        consumer_goods_factor = 0.10
        }
			equipment_bonus = {
				infantry_equipment = {
					build_cost_ic = -0.2 instant = yes
				}
			}
		}

		SWI_die_schweizer_armee = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_die_schweizer_armee"}
			picture = generic_manpower_bonus
			modifier = {
				mobilization_speed = 0.50
        conscription = 0.01
				defence = 0.05
			}
		}

		SWI_the_swiss_banking_act = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_the_swiss_banking_act"}
			picture = SWI_swiss_banks
			modifier = {
				political_power_factor = -0.10
				stability_factor = 0.05
        consumer_goods_factor = 0.10
			}
		}

		SWI_party_line_on_banking_legal_audits = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_party_line_on_banking_legal_audits"}
			picture = japanese_aid_cut
			modifier = {
				political_power_factor = -0.15
        # trade_laws_cost_factor = 0.20 modifier does not seem to exist even though the wiki says so. -Jespertjee
			}
		}

		SWI_swiss_neutrality = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_swiss_neutrality"}
			picture = generic_army_problems
			modifier = {
				enemy_justify_war_goal_time = 0.3333
				war_support_factor = -0.15
        stability_factor = 0.15
			}
		}

		SWI_continuing_economic_planning = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_continuing_economic_planning"}
			picture = HUN_treaty_of_triannon
			modifier = {
				consumer_goods_factor = -0.10
			}
		}

		SWI_weapons_dividends = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_weapons_dividends"}
			picture = HUN_treaty_of_triannon
			modifier = {
				consumer_goods_factor = -0.20
        political_power_factor = 0.05
			}
		}

		SWI_treaty_of_annecy = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_treaty_of_annecy"}
			picture = generic_french_swiss_treaty
			modifier = {
				consumer_goods_factor = -0.05
			}
      equipment_bonus = {
        infantry_equipment = {
          build_cost_ic = 0.2 instant = yes
        }
      }
		}

		SWI_lightened_treaty_of_annecy = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_lightened_treaty_of_annecy"}
			picture = generic_french_swiss_treaty
			modifier = {
				consumer_goods_factor = -0.05
			}
      equipment_bonus = {
        infantry_equipment = {
          build_cost_ic = 0.1 instant = yes
        }
      }
		}

		SWI_treaty_of_munich = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_treaty_of_munich"}
			picture = generic_german_swiss_treaty
			modifier = {
				consumer_goods_factor = -0.05
			}
      equipment_bonus = {
        infantry_equipment = {
          build_cost_ic = 0.2 instant = yes
        }
      }
		}

		SWI_lightened_treaty_of_munich = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_lightened_treaty_of_munich"}
			picture = generic_german_swiss_treaty
			modifier = {
				consumer_goods_factor = -0.05
			}
      equipment_bonus = {
        infantry_equipment = {
          build_cost_ic = 0.1 instant = yes
        }
      }
		}

		SWI_arms_industry_licenses_revoked = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_arms_industry_licenses_revoked"}
			picture = generic_production_bonus
			modifier = {
				industrial_capacity_factory = -0.05
        consumer_goods_factor = -0.15
        }

			equipment_bonus = {
				infantry_equipment = {
					build_cost_ic = -0.10 instant = yes
				}
			}
		}

		SWI_arms_industry_licenses_revoked_taxing_weapons = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_arms_industry_licenses_revoked_taxing_weapons"}
			picture = generic_production_bonus
			modifier = {
				industrial_capacity_factory = -0.05
        consumer_goods_factor = -0.20
        }

			equipment_bonus = {
				infantry_equipment = {
					build_cost_ic = -0.15 instant = yes
				}
			}
		}

		SWI_arms_industry_taxing_weapons = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_arms_industry_taxing_weapons"}
			picture = generic_production_bonus
			modifier = {
        consumer_goods_factor = 0.13
        }
			equipment_bonus = {
				infantry_equipment = {
					build_cost_ic = -0.3 instant = yes
				}
			}
		}

		SWI_diplomatic_ventures = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_diplomatic_ventures"}
			picture = generic_production_bonus
			modifier = {
        political_power_gain = 0.30 #improved from 0.1 to 0.3 to compensate for second modifier being broken
        #trade_laws_cost_factor = -0.90 #broken modifier, thanks paradox
        }
		}

		SWI_restriction_on_gun_production = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_restriction_on_gun_production"}
			picture = generic_production_bonus
			modifier = {
        political_power_factor = 0.20
        }
        equipment_bonus = {
  				infantry_equipment = {
  					build_cost_ic = 0.15 instant = yes
  				}
  			}
		}

		SWI_end_youth_apprenticeships_programs = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_end_youth_apprenticeships_programs"}
			picture = generic_production_bonus
			modifier = {
        war_support_factor = 0.15
        political_power_factor = -0.02
        }
        equipment_bonus = {
  				infantry_equipment = {
  					build_cost_ic = 0.05 instant = yes
  				}
  			}
		}

		SWI_mandatory_youth_weapons_education = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_mandatory_youth_weapons_education"}
			picture = generic_production_bonus
			modifier = {
        stability_factor = -0.15
        mobilization_speed = 0.05
        }
        equipment_bonus = {
  				infantry_equipment = {
  					build_cost_ic = -0.25 instant = yes
  				}
  			}
		}

		SWI_port_payments = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_port_payments"}
			picture = generic_production_bonus
			modifier = {
        consumer_goods_factor = 0.15
        }
		}

		SWI_small_port_access_boon = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_small_port_access_boon"}
			picture = generic_production_bonus
			modifier = {
        industrial_capacity_dockyard = 0.12
        consumer_goods_factor = -0.03
        }
		}

		SWI_large_port_access_boon = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_large_port_access_boon"}
			picture = generic_production_bonus
			modifier = {
        industrial_capacity_dockyard = 0.20
        consumer_goods_factor = -0.05
        }
		}

		SWI_radical_suppression_german = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_radical_suppression_german"}
			picture = generic_production_bonus
			modifier = {
        valkist_drift = -0.05
        drift_defence_factor = 0.20
        political_power_factor = 0.1
        }
		}

		SWI_radical_suppression_french = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_radical_suppression_french"}
			picture = generic_production_bonus
			modifier = {
        paternal_autocrat_drift = -0.05
        drift_defence_factor = 0.20
        political_power_factor = 0.1
        }
		}

		SWI_radical_suppression_german_and_french = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_radical_suppression_german_and_french"}
			picture = generic_production_bonus
			modifier = {
        valkist_drift = -0.05
        paternal_autocrat_drift = -0.05
        drift_defence_factor = 0.40
        political_power_factor = 0.15
        stability_factor = 0.05
        }
		}

		SWI_war_refugee_increase = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_war_refugee_increase"}
			picture = generic_production_bonus
			modifier = {
        MONTHLY_POPULATION = 0.5
        stability_factor = -0.1
        political_power_gain = 0.25
        drift_defence_factor = -0.20
        }
		}

		SWI_war_refugees_departing = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_war_refugees_departing"}
			picture = generic_production_bonus
			modifier = {
        MONTHLY_POPULATION = -0.5
        stability_factor = -0.1
        }
		}

		SDPS_party_line_on_unionism = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_party_line_on_unionism"}
			picture = generic_production_bonus
			modifier = {
        line_change_production_efficiency_factor = 0.10
        industrial_capacity_factory = 0.05
        }
		}

		SUP_party_line_on_unionism = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_party_line_on_unionism"}
			picture = generic_production_bonus
			modifier = {
        consumer_goods_factor = -0.10
        industrial_capacity_factory = 0.07
        }
		}

		SDPS_banking_reforms = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_banking_reforms"}
      picture = SWI_bank_reform
      modifier = {
        stability_factor = 0.05
        political_power_gain = -0.05
        }
		}

		SUP_banking_reforms = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_banking_reforms"}
      picture = SWI_bank_reform
      modifier = {
        stability_factor = 0.05
        consumer_goods_factor = 0.05
        }
		}

		SUP_christian_education = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_christian_education"}
      picture = HUN_treaty_of_triannon
      modifier = {
        drift_defence_factor = 0.10
        stability_factor = 0.05
				research_speed_factor = -0.01
        }
		}

		SDPS_weapons_within_switzerland = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_weapons_within_switzerland"}
      picture = HUN_treaty_of_triannon
      modifier = {
        army_attack_factor = 0.05
        }
        equipment_bonus = {
  				infantry_equipment = {
  					build_cost_ic = -0.10 instant = yes
  				}
  			}
		}

		SDPS_socialist_infrastructure_plan_idea = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_socialist_infrastructure_plan_idea"}
      picture = HUN_treaty_of_triannon
      modifier = {
        production_speed_infrastructure_factor = 0.80
        }
		}

		SDPS_defense_planning = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_defense_planning"}
      picture = HUN_treaty_of_triannon
      modifier = {
        production_speed_bunker_factor = 0.10
        army_core_defence_factor = 0.10
        }
		}

		SUP_defense_planning = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_defense_planning"}
      picture = HUN_treaty_of_triannon
      modifier = {
        production_speed_bunker_factor = 0.25
        army_core_defence_factor = 0.05

        }
		}

		SDPS_weapons_manufactories_on_state_budgets = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SDPS_weapons_manufactories_on_state_budgets"}
      picture = HUN_treaty_of_triannon
      modifier = {
        consumer_goods_factor = 0.10
        industrial_capacity_factory = 0.10
        production_speed_arms_factory_factor = 0.05
        }
		}

		SUP_health_subsidies = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_health_subsidies"}
      picture = HUN_treaty_of_triannon
      modifier = {
        consumer_goods_factor = 0.05
        monthly_population = 0.10
        army_morale_factor = 0.05
        }
		}

		SUP_school_reform = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_school_reform"}
      picture = HUN_treaty_of_triannon
      modifier = {
				research_speed_factor = 0.04
        }
		}

		SUP_progressive_infrastructure_hard = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_progressive_infrastructure_hard"}
      picture = HUN_treaty_of_triannon
      modifier = {
        production_speed_infrastructure_factor = 0.35
        }
		}

		SUP_progressive_infrastructure_soft = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SUP_progressive_infrastructure_soft"}
      picture = HUN_treaty_of_triannon
      modifier = {
        consumer_goods_factor = 0.03
        production_speed_infrastructure_factor = 0.20
        }
		}

		SWI_FVP_gains_momentum = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_FVP_gains_momentum"}
      picture = HUN_treaty_of_triannon
      modifier = {
        paternal_autocrat_drift = 0.05
        political_power_factor = -0.10
        }
		}

		SWI_DNDAP_gains_momentum = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_DNDAP_gains_momentum"}
      picture = HUN_treaty_of_triannon
      modifier = {
        valkist_drift = 0.03
        political_power_factor = -0.10
        }
		}

		SWI_VWF_gains_momentum = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_VWF_gains_momentum"}
      picture = HUN_treaty_of_triannon
      modifier = {
        valkist_drift = 0.03
        political_power_factor = -0.10
        }
		}

		SWI_building_air_fields = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_building_air_fields"}
      picture = man_five_year_plan_air
      modifier = {
        production_speed_air_base_factor = 0.20
        experience_gain_air = 0.01
        }
		}

		SWI_defense_here_and_now = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_defense_here_and_now"}
      picture = UK_military_loyal_idea
      modifier = {
        production_speed_bunker_factor = 0.15
        production_speed_infrastructure_factor = 0.05
        }
		}

		SWI_military_action = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_military_action"}
      picture = chi_army_corruption3
      modifier = {
        conscription_factor = 0.10
        mobilization_speed = 0.10
        }
		}

		SWI_fortress_switzerland_idea = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_fortress_switzerland_idea"}
      picture = chi_army_corruption3
      modifier = {
        max_dig_in = 2
        defence = 0.03
        experience_gain_army = 0.01
        }
		}

		SWI_owl_defense_idea = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_owl_defense_idea"}
      picture = chi_army_corruption3
      modifier = {
        air_night_penalty = -0.15
        air_weather_penalty = -0.05
        experience_gain_air = 0.01
        }
		}

		SWI_german_swiss_mediation = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_german_swiss_mediation"}
      picture = SWI_new_order
      modifier = {
        stability_factor = -0.01
        political_power_factor = -0.02
        }
		}

		SWI_swiss_mediation = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_swiss_mediation"}
      picture = SWI_new_order
      modifier = {
        stability_factor = 0.01
        political_power_factor = 0.02
        }
		}

		SWI_empty_southern_industry_rosters = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_empty_southern_industry_rosters"}
      picture = capital_outflow
      modifier = {
        consumer_goods_factor = 0.10
        line_change_production_efficiency_factor = -0.10
        }
		}

		SWI_paying_for_guns = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_paying_for_guns"}
      picture = KTG_Gold_Trade
      modifier = {
        consumer_goods_factor = 0.10
        }
		}

		SWI_paying_for_our_guns = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_paying_for_our_guns"}
      picture = KTG_Gold_Trade
      modifier = {
        consumer_goods_factor = 0.20
        line_change_production_efficiency_factor = -0.05
        }
		}

		SWI_paid_off_guns = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_paid_off_guns"}
      picture = SWI_new_order
      modifier = {
        consumer_goods_factor = -0.10
        line_change_production_efficiency_factor = 0.05
        political_power_gain = 0.15
        }
		}

		SWI_newfound_political_hegemony = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_newfound_political_hegemony"}
      picture = generic_manpower_bonus
      modifier = {
        political_power_factor = 0.15
        drift_defence_factor = 0.10
        consumer_goods_factor = -0.05
        }
		}

		SWI_railway_strikes = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_railway_strikes"}
      picture = uncompetitive_eco
      modifier = {
        consumer_goods_factor = 0.10
        production_speed_infrastructure_factor = -0.50
        }
		}

		SWI_1935_railway_strikes = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_1935_railway_strikes"}
      picture = great_depression
      modifier = {
        consumer_goods_factor = 0.10
        political_power_factor = -0.20
        production_speed_infrastructure_factor = -0.30
        }
		}

		SWI_unionbusters = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_unionbusters"}
      picture = UK_military_loyal_idea
      modifier = {
        stability_factor = -0.10
        political_power_factor = -0.50
        }
		}

		SWI_the_balance_of_power = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_the_balance_of_power"}
      picture = generic_reserve_divisions
      modifier = {
        political_power_gain = 0.50
        political_power_factor = -0.25
        }
		}

		SWI_rebuilding_unity = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_rebuilding_unity"}
      picture = generic_army_war_college
      modifier = {
        political_power_gain = 0.25
        stability_factor = 0.05
        }
		}

		SWI_national_economy = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_national_economy"}
      picture = SOV_scientist_defect
      modifier = {
        # trade_laws_cost_factor = 0.25 broken modifier --jespertjee
        line_change_production_efficiency_factor = -0.05
        consumer_goods_factor = -0.10
        political_power_factor = 0.15

        }
		}

		SWI_the_alps_unite_campaign = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_the_alps_unite_campaign"}
      picture = SWI_conscription
      modifier = {
        war_support_factor = 0.10
        conscription_factor = 0.10
        stability_factor = -0.05
        }
		}

		SWI_swiss_education = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_swiss_education"}
      picture = SWI_conscription
      modifier = {
				research_speed_factor = 0.03
        line_change_production_efficiency_factor = 0.05
        consumer_goods_factor = 0.05
        }
		}

		SWI_market_liberal_hegemony = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_market_liberal_hegemony"}
      picture = generic_goods_red_bonus
      modifier = {
        political_power_factor = 0.15
        }
		}

		SWI_internal_remediation = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_internal_remediation"}
      picture = generic_goods_red_bonus
      modifier = {
        political_power_factor = 0.15
        stability_weekly = -0.005
        }
		}

		SWI_improved_conditions = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_improved_conditions"}
      picture = FRA_factory_strikes
      modifier = {
        consumer_goods_factor = 0.10
        industrial_capacity_factory = 0.10
        political_power_factor = 0.05
        }
		}

		SWI_integrating_german_malcontents = {
			on_add = {log = "[GetDateText]: [Root.GetName]: add idea SWI_integrating_german_malcontents"}
      picture = tfv_can_conscription_crisis
      modifier = {
        consumer_goods_factor = 0.10
        political_power_factor = -0.10
        production_speed_industrial_complex_factor = 0.05
        }
		}

	}

	### Head of Government
	head_of_government = {
		SWI_Marino_Bodenmann_hog_van = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				vanguardist
				hog_ambitious_union_boss
			}
		}
		SWI_Jules_Humbert_Droz_hog_col = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				collectivist
				hog_red_chairmen
			}
		}
		SWI_Enrico_Celio_hog_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_democrat
				hog_silent_workhorse
			}
		}
		SWI_Ernst_Nobs_hog_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_democrat
				hog_privileged_socialist
			}
		}
		SWI_Charles_Oser_hog_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_liberal
				hog_political_protege
			}
		}
		SWI_Eduard_von_Steiger_hog_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_liberal
				hog_pragmatic_statesman
			}
		}
		SWI_Giuseppe_Motta_hog_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_liberal
				hog_naive_optimist
			}
		}
		SWI_Max_Petitpierre_hog_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_liberal
				hog_happy_amateur
			}
		}
		SWI_Philipp_Etter_hog_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_liberal
				hog_accomplished_diplomat
			}
		}
		SWI_Albert_Meyer_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_smiling_oilman
			}
		}
		SWI_Ernst_Wetter_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_naive_optimist
			}
		}
		SWI_Johannes_Baumann_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_happy_amateur
			}
		}
		SWI_Karl_Kobelt_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_political_protege
			}
		}
		SWI_Marcel_Pilet_Golaz_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_corporate_suit
			}
		}
		SWI_Walther_Stampfli_hog_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				market_liberal
				hog_charismatic_charmer
			}
		}
		SWI_Oskar_Leimgruber_hog_sco = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				social_conservative
				hog_smiling_oilman
			}
		}
		SWI_Franz_Burri_hog_pau = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				paternal_autocrat
				hog_local_tyrant
			}
		}
		SWI_Johann_Otto_Kellerhals_hog_npo = {
			allowed = { original_tag = SWI }
			available = { can_replace_hog = no }
			cancel_if_invalid = no
			traits = {
				head_of_government
				national_populist
				hog_determined_populist
			}
		}
	}
	### Foreign Minister
	foreign_minister = {
		SWI_Jakob_Herzog_for_van = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				vanguardist
				for_ideological_crusader
			}
		}
		SWI_Rudolf_Gelpke_for_col = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				collectivist
				for_biased_intellectual
			}
		}
		SWI_Enrico_Celio_for_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_democrat
				for_foreign_sympathizer
			}
		}
		SWI_Giuseppe_Motta_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_general_staffer
			}
		}
		SWI_Jakob_I_Huber_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_great_compromiser
			}
		}
		SWI_Karl_Zeltner_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_moderate_among_radicals
			}
		}
		SWI_Leo_Niklaus_Lejeune_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_relations_expert
			}
		}
		SWI_Max_Kaufmann_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_apologetic_clerk
			}
		}
		SWI_Max_Petitpierre_for_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				social_liberal
				for_biased_intellectual
			}
		}
		SWI_Justus_Stoecklin_for_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				market_liberal
				for_foreign_sympathizer
			}
		}
		SWI_Marcel_Pilet_Golaz_for_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				market_liberal
				for_apologetic_clerk
			}
		}
		SWI_Walther_Stampfli_for_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				market_liberal
				for_great_compromiser
			}
		}
		SWI_Jacob_Lorenz_for_pau = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				paternal_autocrat
				for_iron_fisted_brute
			}
		}
		SWI_Ernst_Leonhardt_for_npo = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				foreign_minister
				national_populist
				for_the_cloak_n_dagger_schemer
			}
		}
	}
	### Economy Minister
	economy_minister = {
		SWI_Franz_Welti_eco_van = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				vanguardist
				eco_planned_economy_proponent
			}
		}
		SWI_Charles_Naine_eco_col = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				collectivist
				eco_imbedded_unioneer
			}
		}
		SWI_Ernst_Nobs_eco_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_democrat
				eco_mixed_economy
			}
		}
		SWI_Leo_Schweizer_eco_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_democrat
				eco_reformer
			}
		}
		SWI_Otto_Gass_eco_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_democrat
				eco_industrialiser
			}
		}
		SWI_Werner_Jenni_eco_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_democrat
				eco_the_minister_for_everything
			}
		}
		SWI_Ernst_Weber_eco_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_liberal
				eco_trade_proponent
			}
		}
		SWI_Jakob_I_Huber_eco_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_liberal
				eco_vernacular_industrialiser
			}
		}
		SWI_Jakob_Mosimann_eco_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_liberal
				eco_construction_magnate
			}
		}
		SWI_Leonardo_Castelli_eco_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				social_liberal
				eco_bank_president
			}
		}
		SWI_Ernst_Wetter_eco_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				market_liberal
				eco_balanced_budget_economy
			}
		}
		SWI_Friedrich_Traugott_Wahlen_eco_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				market_liberal
				eco_administrative_genius
			}
		}
		SWI_Karl_Kobelt_eco_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				market_liberal
				eco_keynesian_economy
			}
		}
		SWI_Rudolf_Minger_eco_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				market_liberal
				eco_laissez_faire_capitalist
			}
		}
		SWI_Hans_Oehler_eco_pau = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				paternal_autocrat
				eco_military_entrepreneur
			}
		}
		SWI_Max_Leo_Keller_eco_npo = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				economy_minister
				national_populist
				eco_steel_magnate
			}
		}
	}
	### Security Minister
	security_minister = {
		SWI_Heinrich_Abbegg_sec_van = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				vanguardist
				sec_back_stabber
			}
		}
		SWI_Ernest_Paul_Graber_sec_col = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				collectivist
				sec_man_of_the_people
			}
		}
		SWI_Fritz_Platten_sec_col = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				collectivist
				sec_prince_of_terror
			}
		}
		SWI_Ernst_Loeliger_sec_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_democrat
				sec_man_of_the_people
			}
		}
		SWI_Guido_Miescher_sec_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_democrat
				sec_efficient_sociopath
			}
		}
		SWI_Hans_Leupin_sec_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_democrat
				sec_great_soul
			}
		}
		SWI_Traugott_Meyer_sec_sde = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_democrat
				sec_health_and_safety
			}
		}
		SWI_Edmund_Schulthess_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_media_magnate
			}
		}
		SWI_Eduard_von_Steiger_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_silent_lawyer
			}
		}
		SWI_Felix_Calonder_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_regionalist
			}
		}
		SWI_Gonzague_de_Reynold_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_crime_fighter
			}
		}
		SWI_Hugo_Gschwind_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_man_of_the_people
			}
		}
		SWI_Max_Waibel_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_compassionate_gentleman
			}
		}
		SWI_Philipp_Etter_sec_sli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				social_liberal
				sec_driven_recruiter
			}
		}
		SWI_Heinrich_Rothmund_sec_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				market_liberal
				sec_man_of_the_people
			}
		}
		SWI_Johannes_Baumann_sec_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				market_liberal
				sec_health_and_safety
			}
		}
		SWI_Paul_Frutig_sec_mli = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				market_liberal
				sec_crooked_kleptocrat
			}
		}
		SWI_Franz_Burri_sec_pau = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				paternal_autocrat
				sec_secret_police_chief
			}
		}
		SWI_Arthur_Fonjallaz_sec_npo = {
			allowed = { original_tag = SWI }
			available = { can_replace_minister = no }
			cancel_if_invalid = no
			traits = {
				security_minister
				national_populist
				sec_silent_lawyer
			}
		}
	}
	### Chief of Staff
	chief_of_staff = {
		SWI_Traugott_Meyer_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_fire_support
			}
		}
		SWI_Paul_Guertler_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_psychology
			}
		}
		SWI_Henri_Guisan_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_mass_combat
			}
		}
		SWI_Jakob_I_Huber_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_manoeuvre
			}
		}
		SWI_Hans_Max_Huber_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_defence
			}
		}
		SWI_Eugen_Bircher_cos = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_staff
				cos_school_of_commando_operations
			}
		}
	}
	### Chief of Army
	chief_of_army = {
		SWI_Paul_Rossy_carm = {
			allowed = { original_tag = SWI }
			traits = { 
				chief_of_army
				carm_armoured_spearhead_doctrine
			}
		}
		SWI_Henri_Guisan_carm = {
			allowed = { original_tag = SWI }
			traits = { 
				chief_of_army
				carm_guns_and_butter_doctrine
			}
		}
		SWI_Ernst_Laur_carm = {
			allowed = { original_tag = SWI }
			traits = { 
				chief_of_army
				carm_doctrine_of_autonomy
			}
		}
		SWI_Eugen_Bircher_carm = {
			allowed = { original_tag = SWI }
			traits = { 
				chief_of_army
				carm_commando_doctrine
			}
		}
	}
	### Chief of Navy
	chief_of_navy = {
		SWI_Rene_von_Graffenried_cnav = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_navy
				cnav_base_control_doctrine
			}
		}
		SWI_Hans_Oehler_cnav = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_navy
				cnav_decisive_battle_doctrine
			}
		}
	}
	### Chief of Air Force
	chief_of_air_force = {
		SWI_JD_de_Montenach_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_air_superiority_doctrine
			}
		}
		SWI_Etienne_Primault_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_battlefield_support_doctrine
			}
		}
		SWI_Fritz_Rihner_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_carpet_bombing_doctrine
			}
		}
		SWI_Carl_Burckhardt_de_Reynold_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_naval_aviation_doctrine
			}
		}
		SWI_Oskar_Bider_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_the_red_baron
			}
		}
		SWI_Alfred_Sarasin_cair = {
			allowed = { original_tag = SWI }
			traits = {
				chief_of_air_force
				cair_vertical_envelopment_doctrine
			}
		}
	}
	### Theorist
	theorist = {
		SWI_Eugen_Bircher_theo = {
			allowed = { original_tag = SWI }
			traits = {
				land_doctrine_theorist
			}
			research_bonus = {
				cat_grand_battle_plan = 0.1
			}
		}
		SWI_Henri_Guisan_theo = {
			allowed = { original_tag = SWI }
			traits = {
				land_doctrine_theorist
			}
			research_bonus = {
				cat_superior_firepower = 0.1
			}
		}
		SWI_Rene_von_Graffenried_theo = {
			allowed = { original_tag = SWI }
			traits = {
				naval_doctrine_theorist
			}
			research_bonus = {
				naval_doctrine = 0.1
			}
		}
		SWI_Carl_Burckhardt_de_Reynold_theo = {
			allowed = { original_tag = SWI }
			traits = {
				air_doctrine_theorist
			}
			research_bonus = {
				air_doctrine = 0.1
			}
		}
	}
	### companies
	industrial_concern = {

		brown_boveri = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea brown_boveri" }
			allowed = { original_tag = SWI }
			traits = { industrial_manufacturer }
			modifier = {
				production_speed_arms_factory_factor = 0.1
				production_speed_industrial_complex_factor = 0.1
			}
			research_bonus = {
				industry = 0.1
			}
		}

		swi_steel = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea swi_steel" }
			allowed = {
				original_tag = SWI
			}
			available = {
				has_completed_focus = SWI_canton_improvement
			}
			traits = { industrial_manufacturer }
			modifier = {
				production_speed_arms_factory_factor = 0.15
				production_speed_industrial_complex_factor = 0.1
			}
			research_bonus = {
				industry = 0.1
			}
		}

		sulzer_ag = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea sulzer_ag" }
			allowed = { original_tag = SWI }
			traits = { industrial_manufacturer }
			modifier = {
				production_speed_industrial_complex_factor = 0.15
				local_resources_factor = 0.05
			}
			research_bonus = {
				industry = 0.1
			}
		}

		swi_ptt = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea swi_ptt" }
			allowed = {original_tag = SWI }
			traits = {electronics_manufacturer }
			research_bonus = {
				electronics = 0.1
			}
		}

		lonza_elektrizitatswerke = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea lonza_elektrizitatswerke" }
			allowed = {original_tag = SWI }
			traits = {chemical_producer }
			research_bonus = {
				synth_resources = 0.1
			}
		}
	}

#### Weapons Manufacturer ####
	weapons_manufacturer = {
		designer = yes

		waffenfabrik_solothurn = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea waffenfabrik_solothurn" }
			allowed = { original_tag = SWI }
			traits = { infantry_equipment_producer_offense_1 }
			research_bonus = {
				infantry_weapons = 0.1
			}
		}

		schweizerische_industrie_gesellschaft = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea schweizerische_industrie_gesellschaft" }
			allowed = { original_tag = SWI }
			traits = { infantry_equipment_producer_defense_2 }
			research_bonus = {
				infantry_weapons = 0.1
			}
		}

		waffenfabrik_bern = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea waffenfabrik_bern" }
			allowed = { original_tag = SWI }
			traits = { infantry_equipment_producer_mass_1 }
			research_bonus = {
				infantry_weapons = 0.1
			}
		}

		oerlikon = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea oerlikon" }
			allowed = {
				original_tag = SWI
			}
			available = {
				has_completed_focus = SWI_military_factories
			}
			traits = { artillery_producer_offense_2 }
			research_bonus = {
				artillery = 0.1
			}
		}

		swi_saurer = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea swi_saurer" }
			allowed = { original_tag = SWI }
			traits = { motorised_equipment_producer_mass_1 }
			research_bonus = {
				motorized_equipment = 0.1
			}
		}

	}

#### Heavy Equipment Manufacturer ####
	tank_manufacturer = {
		designer = yes
		
		swi_fbw = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea swi_fbw" }
			allowed = { original_tag = SWI }
			traits = { medium_tank_producer_defense_1 }
			research_bonus = {
				armor = 0.1
			}
		}

		eidgenossische_konstruktionswerkstatte = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea eidgenossische_konstruktionswerkstatte" }
			allowed = { original_tag = SWI }
			traits = { small_tank_producer_defense_1 }
			research_bonus = {
				armor = 0.1
			}
		}

		berna = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea berna" }
			allowed = { original_tag = SWI }
			traits = { small_tank_producer_mass_0 }
			research_bonus = {
				armor = 0.1
			}
		}
	}
	#### Air and Naval Manufacturer ####
	air_naval_manufacturer = {
		designer = yes

		werner_risch = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea werner_risch" }
			allowed = { original_tag = SWI }
			traits = { small_ship_producer_mass_0 }
			research_bonus = {
				naval_equipment = 0.1
			}
		}
		eidgenossisches_flugzeugwerk = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea eidgenossisches_flugzeugwerk" }
			allowed = { original_tag = SWI }
			traits = { fighter_producer_defense_1 }
			research_bonus = {
				air_equipment = 0.1
			}
		}

		flug_fahrzeugwerke_altenrhein = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea flug_fahrzeugwerke_altenrhein" }
			allowed = { original_tag = SWI }
			traits = { bomber_producer_mass_1 }
			research_bonus = {
				air_equipment = 0.1
			}
		}

		pilatus = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea pilatus" }
			allowed = { original_tag = SWI }
			traits = { nav_cas_producer_offense_0 }
			research_bonus = {
				air_equipment = 0.1
			}
		}

		swissair = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea swissair" }
			allowed = {
				original_tag = SWI
			}
			available = {
				has_completed_focus = SWI_air_academy
			}
			traits = { fighter_producer_offense_1 }
			research_bonus = {
				air_equipment = 0.1
			}
		}

	}
}
